version: "2"

volumes:
  database:
    driver: local
  website:

services:
  # Build the frontend with node into a Docker volume
  # This container does nothing useful beside providing an
  # assets container to the nginx service
  frontend:
    build:
      context: .
    volumes:
      - website:/usr/src/app/build

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - website:/www

  # The VILLASweb backend
  backend:
    build: backend
    environment:
      - NODE_ENV=production
    restart: always

  # The MongoDB database for the VILLASweb backend
  database:
    image: mongo:latest
    user: mongodb
    volumes:
      - database:/data/db
    restart: always
    user: mongodb

  # AMQP broker for VILLAScontroller
#  broker:
#    image: rabbitmq:management
#    environment:
#      RABBITMQ_DEFAULT_USER: "villas"
#      RABBITMQ_DEFAULT_PASS: "s3c0sim4!"
#    ports:
#      - "8080:15672"
#      - "5672:5672"

  # VILLASnode, the gateway between UDP and WebSocket traffic
  node:
    build:
      context: .
      dockerfile: Dockerfile.node
    privileged: true
    restart: always
    command: node /etc/villas/node/websocket-demo.conf
    volumes:
      - /villas:/villas
      - ./etc/node:/etc/villas/node

  # Web Interface for MongoDB
  mongo-express:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: database
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: "mongo-admin"
    ports:
      - "8081:8081"
